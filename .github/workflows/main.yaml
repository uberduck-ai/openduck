name: eks

on:
  pull_request:
    types: [opened, closed, reopened, synchronize]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [production, staging]
    if: startsWith(github.head_ref, matrix.environment)
    name: Pipeline for ${{ matrix.environment }}
    steps:
      - name: Init runner
        id: start-runner-openduck
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ secrets.AWS_EC2_AMI }}
          ec2-instance-type: ${{ vars.AWS_EC2_TYPE }}
          subnet-id: ${{ secrets.AWS_VPC_SUBNET }}
          security-group-id: ${{ secrets.AWS_VPC_SG }}
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "uberduck-github-runner-openduck"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Setting Up Directory Structures as ENV Vars
        id: tagImage
        run: |
          echo "imageTag=${GITHUB_REF##*/}-$(git rev-parse --short=7 HEAD)-$(date +%s)" >> $GITHUB_OUTPUT
      - name: Build, Tag & Push ${{ matrix.environment }}-openduck image to ECR
        uses: docker/build-push-action@v5
        env:
          ecrRegistry: ${{ steps.login-ecr.outputs.registry }}
          imageTag: ${{ steps.tagImage.outputs.imageTag }}
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.ecrRegistry }}/${{ matrix.environment }}-openduck:${{ env.imageTag }}
            ${{ env.ecrRegistry }}/${{ matrix.environment }}-openduck:latest
          cache-from: type=registry,ref=${{ env.ecrRegistry }}/${{ matrix.environment }}-openduck:latest
          cache-to: type=inline
      - name: Deploy openduck
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ matrix.environment }}-uberduck
          args: set image --namespace default --record deployment/api-openduck api=${{ secrets.AWS_ECR_REGISTRY }}/${{ matrix.environment }}-openduck:${{ steps.tagImage.outputs.imageTag }}
      - name: Terminate runner
        if: always()
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ steps.start-runner-openduck.outputs.label }}
          ec2-instance-id: ${{ steps.start-runner-openduck.outputs.ec2-instance-id }}
